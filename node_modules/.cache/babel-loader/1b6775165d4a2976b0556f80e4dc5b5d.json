{"ast":null,"code":"var _jsxFileName = \"/home/anica/NP-Problem-2/src/Component/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, FormControl, InputLabel, Select, MenuItem, TableCell, TableContainer, Paper, Table, TableHead, TableRow, TableBody, Grid } from '@material-ui/core';\nimport { Graph } from 'react-d3-graph';\nimport Expense from '../classes/expense';\nimport { splitwise } from '../utils/splitwise';\nimport Navbar from './nav';\n\nconst Home = () => {\n  _s();\n\n  //arrow function and const renders new variable every time\n  const [name, setName] = useState('');\n  const [allNames, setAllNames] = useState([]);\n  const [flag, setFlag] = useState(false);\n  const [finalValues, setFinalValues] = useState({\n    \"person1\": \"\",\n    \"person2\": \"\",\n    \"amount\": \"\"\n  });\n  const [items, setItems] = useState([]);\n  const [outputList, setOutputList] = useState([]);\n  const {\n    person1,\n    person2,\n    amount\n  } = finalValues;\n  const [inputGraphData, setInputGraphData] = useState({});\n  const [inputGraphConfig, setInputGraphConfig] = useState({});\n  const [outputGraphData, setOutputGraphData] = useState({});\n\n  const handleFinalChange = name => event => {\n    setFinalValues({ ...finalValues,\n      [name]: event.target.value\n    }); // ... - spread operator \n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const addParticipant = event => {\n    event.preventDefault();\n    setAllNames(previous => [{\n      name\n    }, ...previous]);\n    setName('');\n  };\n\n  const listOfNames = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"allnames\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Names\"), allNames.map((item, index) => /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: \"#3f3f3f\"\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \" \", item.name)));\n  };\n\n  const handleOpenForm = () => {\n    setFlag(!false);\n  };\n\n  const myForm = () => {\n    function addValues() {\n      if (finalValues['person1'] !== \"\" && finalValues['person2'] !== \"\" && finalValues['amount'] !== \"\") {\n        setItems([...items, finalValues]);\n      } else {\n        alert(\"Enter all Fields\");\n      }\n\n      setFinalValues({ ...finalValues,\n        \"person1\": \"\",\n        \"person2\": \"\",\n        \"amount\": \"\"\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"Payer\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Payee\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, items.length > 0 && items.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      align: \"center\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, row.person1), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, row.person2), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, row.amount))), /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, \"Payer\"), /*#__PURE__*/React.createElement(Select, {\n      value: person1,\n      onChange: handleFinalChange(\"person1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, allNames.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n      value: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }, item.name))))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, \"Payee\"), /*#__PURE__*/React.createElement(Select, {\n      value: person2,\n      onChange: handleFinalChange(\"person2\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, allNames.map(item => person1 !== item.name ? /*#__PURE__*/React.createElement(MenuItem, {\n      value: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 48\n      }\n    }, item.name) : /*#__PURE__*/React.createElement(React.Fragment, null))))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-number\",\n      label: \"Amount\",\n      type: \"number\",\n      value: amount,\n      placeholder: \"Enter Amount\",\n      onChange: handleFinalChange(\"amount\"),\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: e => {\n        addValues();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, \"+ ADD\"))))));\n  };\n\n  const handleTransactionDataSubmit = () => {\n    console.log(\"Participants: \", allNames, \" transactions: \", items);\n    const data = {\n      nodes: generateNodes(),\n      links: generateLinks()\n    };\n    const config = {\n      freezeAllDragEvents: true,\n      nodeHighlightBehavior: true,\n      node: {\n        color: \"lightgreen\",\n        highlightStrokeColor: \"blue\",\n        fontSize: 12\n      },\n      link: {\n        highlightColor: \"lightblue\",\n        renderLabel: true,\n        labelProperty: \"amount\",\n        fontSize: 12\n      },\n      directed: true,\n      height: 600,\n      width: 600\n    };\n    setInputGraphData(data);\n    setInputGraphConfig(config);\n  };\n\n  const generateNodes = () => allNames.map(item => ({\n    id: item.name\n  }));\n\n  const generateLinks = () => items.map(_ref => {\n    let {\n      person1,\n      person2,\n      amount\n    } = _ref;\n    return {\n      source: person1,\n      target: person2,\n      amount\n    };\n  });\n\n  const generateOutputLinks = items => items.map(_ref2 => {\n    let {\n      person1,\n      person2,\n      amount\n    } = _ref2;\n    return {\n      source: person1,\n      target: person2,\n      amount\n    };\n  });\n\n  const splitwiseTransactions = () => {\n    const input = [];\n\n    for (let item of items) {\n      input.push(new Expense(item.person1, item.person2, parseInt(item.amount)));\n    }\n\n    const output = splitwise(input);\n    console.log('output: ', output);\n    setOutputList(output);\n    setOutputGraphData({\n      nodes: generateNodes(),\n      links: generateOutputLinks(output)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"Enter names of People in the group\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Name\",\n    variant: \"outlined\",\n    value: name,\n    disabled: flag,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: addParticipant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, \"Add\")), allNames && allNames.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-all-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, listOfNames())), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleOpenForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, \"Submit\")) : null), flag ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, \"Transactions\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Enter transactions in the table below :-\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 23\n    }\n  }, \"Enter the names of the Payer in first column\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, \"Enter the names of the Payee in second column\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 23\n    }\n  }, \"Enter the amount paid in the third column\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }, \"Click on Build Graph to build a graph from the given transactions\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, \"Click on Simplify payments button when you are done with entering the payments.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, flag && myForm()), items && items.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-names\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleTransactionDataSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, \"Build Graph\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: splitwiseTransactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }, \"Simplify Settlements\")) : null), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, Object.keys(inputGraphData).length && Object.keys(inputGraphConfig).length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, \"Generated graph from the transactions entered\"), /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id\" // id is mandatory\n    ,\n    data: inputGraphData,\n    config: inputGraphConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  })) : null)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, outputList && outputList.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, \" Simplified Settlement\"), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, \"Payer\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, \"Payee\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, outputList.length && outputList.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    align: \"center\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 31\n    }\n  }, row.person1), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 31\n    }\n  }, row.person2), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 31\n    }\n  }, row.amount))))))) : null), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, Object.keys(outputGraphData).length && Object.keys(inputGraphConfig).length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }, \"Graph generated from the solution of algorithm\"), /*#__PURE__*/React.createElement(Graph, {\n    id: \"graph-id-output\" // id is mandatory\n    ,\n    data: outputGraphData,\n    config: inputGraphConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  })) : null))) : null);\n};\n\n_s(Home, \"uZIhvks9oagBZVbwiVwhIYgRnGo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/anica/NP-Problem-2/src/Component/Home.js"],"names":["React","useState","TextField","Button","FormControl","InputLabel","Select","MenuItem","TableCell","TableContainer","Paper","Table","TableHead","TableRow","TableBody","Grid","Graph","Expense","splitwise","Navbar","Home","name","setName","allNames","setAllNames","flag","setFlag","finalValues","setFinalValues","items","setItems","outputList","setOutputList","person1","person2","amount","inputGraphData","setInputGraphData","inputGraphConfig","setInputGraphConfig","outputGraphData","setOutputGraphData","handleFinalChange","event","target","value","handleChange","addParticipant","preventDefault","previous","listOfNames","map","item","index","color","handleOpenForm","myForm","addValues","alert","length","row","shrink","e","handleTransactionDataSubmit","console","log","data","nodes","generateNodes","links","generateLinks","config","freezeAllDragEvents","nodeHighlightBehavior","node","highlightStrokeColor","fontSize","link","highlightColor","renderLabel","labelProperty","directed","height","width","id","source","generateOutputLinks","splitwiseTransactions","input","push","parseInt","output","textAlign","Object","keys"],"mappings":"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","sourcesContent":["import React, { useState, } from 'react'\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TableCell,\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  Grid,\n} from '@material-ui/core'\nimport { Graph } from 'react-d3-graph'\nimport Expense from '../classes/expense'\nimport { splitwise } from '../utils/splitwise'\nimport Navbar from './nav'\n\n\nconst Home = () => {                          //arrow function and const renders new variable every time\n  const [name, setName] = useState('')\n  const [allNames, setAllNames] = useState([])\n  const [flag, setFlag] = useState(false)\n  const [finalValues, setFinalValues] = useState({\n    \"person1\": \"\",\n    \"person2\": \"\",\n    \"amount\": \"\"\n  })\n  const [items, setItems] = useState([])\n  const [outputList, setOutputList] = useState([])\n\n  const { person1, person2, amount } = finalValues;\n\n  const [inputGraphData, setInputGraphData] = useState({})\n  const [inputGraphConfig, setInputGraphConfig] = useState({})\n\n  const [outputGraphData, setOutputGraphData] = useState({})\n\n  const handleFinalChange = name => event => {\n    setFinalValues({ ...finalValues, [name]: event.target.value })      // ... - spread operator \n  }\n\n  const handleChange = (event) => {\n    setName(event.target.value)\n  }\n\n  const addParticipant = event => {\n    event.preventDefault();\n    setAllNames(previous => [{ name }, ...previous])\n    setName('')\n  }\n\n  const listOfNames = () => {\n    return (\n      <div className=\"allnames\">\n        <h3>Names</h3>\n\n        {allNames.map((item, index) => (\n          <h4 style={{ color: \"#3f3f3f\" }} key={index}> { item.name}</h4>\n        ))\n        }\n      </div>\n    )\n  }\n\n  const handleOpenForm = () => {\n    setFlag(!false)\n  }\n\n  const myForm = () => {\n    function addValues() {\n      if ((finalValues['person1'] !== \"\") && (finalValues['person2'] !== \"\") && (finalValues['amount'] !== \"\")) {\n        setItems([...items, finalValues])\n      } else {\n        alert(\"Enter all Fields\")\n      }\n      setFinalValues({\n        ...finalValues,\n        \"person1\": \"\",\n        \"person2\": \"\",\n        \"amount\": \"\"\n      })\n    }\n    return (\n      <TableContainer component={Paper} className=\"table\">\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Payer</TableCell>\n              <TableCell align=\"center\">Payee</TableCell>\n              <TableCell align=\"center\">Amount</TableCell>\n              <TableCell align=\"center\">Add</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>                                      \n            {items.length > 0 && items.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" align=\"center\" scope=\"row\">       \n                  {row.person1}\n                </TableCell>\n                <TableCell align=\"center\">{row.person2}</TableCell>\n                <TableCell align=\"center\">{row.amount}</TableCell>\n              </TableRow>\n             ))}     \n            <TableRow>\n              <TableCell align=\"center\">\n                <FormControl>\n                  <InputLabel>Payer</InputLabel>\n                  <Select value={person1} onChange={handleFinalChange(\"person1\")}>\n                    {allNames.map(item => (\n                      <MenuItem value={item.name} >{item.name}</MenuItem>\n                    ))\n                    }\n                  </Select>\n                </FormControl>\n              </TableCell>\n\n\n              <TableCell align=\"center\">\n                <FormControl>\n                  <InputLabel>Payee</InputLabel>\n                  <Select value={person2} onChange={handleFinalChange(\"person2\")}>\n                    {allNames.map(item =>\n                    ((person1 !== item.name) ? <MenuItem value={item.name}>{item.name}</MenuItem> : <></>\n                    ))\n                    }\n                  </Select>\n                </FormControl>\n              </TableCell>\n\n\n              <TableCell align=\"center\">\n                <FormControl>\n                  <TextField\n                    id=\"standard-number\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    value={amount}\n                    placeholder=\"Enter Amount\"\n                    onChange={handleFinalChange(\"amount\")}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormControl>\n              </TableCell>\n\n\n              <TableCell align=\"center\">\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={(e) => { addValues() }}\n                >\n                  + ADD\n                </Button>\n\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n  }\n\n  const handleTransactionDataSubmit = () => {\n    console.log(\"Participants: \", allNames, \" transactions: \", items)\n    const data = {\n      nodes: generateNodes(),\n      links: generateLinks(),\n    }\n    const config = {\n      freezeAllDragEvents: true,\n      nodeHighlightBehavior: true,\n      node: {\n        color: \"lightgreen\",\n        highlightStrokeColor: \"blue\",\n        fontSize: 12,\n      },\n      link: {\n        highlightColor: \"lightblue\",\n        renderLabel: true,\n        labelProperty: \"amount\",\n        fontSize: 12,\n      },\n      directed: true,\n      height: 600,\n      width: 600,\n    };\n\n    setInputGraphData(data)\n    setInputGraphConfig(config)\n  }\n\n  const generateNodes = () => allNames.map(item => ({ id: item.name }))\n\n  const generateLinks = () => items.map(({ person1, person2, amount }) => ({ source: person1, target: person2, amount }))\n\n  const generateOutputLinks = (items) => items.map(({ person1, person2, amount }) => ({ source: person1, target: person2, amount }))\n\n  const splitwiseTransactions = () => {\n    const input = []\n    for (let item of items) {\n      input.push(new Expense(item.person1, item.person2, parseInt(item.amount)))\n    }\n    const output = splitwise(input)\n    console.log('output: ', output)\n    setOutputList(output)\n    setOutputGraphData({ nodes: generateNodes(), links: generateOutputLinks(output) })\n  }\n\n  return (\n    <div>\n      <div className=\"name-component\">\n        <Navbar />\n        <div className=\"p-name\">\n          <h3>Enter names of People in the group</h3>\n          <div className=\"p-name-field\">\n            <TextField id=\"outlined-basic\" label=\"Name\"\n              variant=\"outlined\"\n              value={name}\n              disabled={flag}\n              onChange={handleChange} />\n          </div>\n          <Button variant=\"contained\"\n            color=\"primary\"\n            onClick={addParticipant}\n          >\n            Add\n                </Button>\n        </div>\n        {allNames && allNames.length ? (\n          <>\n            <div className=\"list-div\">\n              <div className=\"list-all-names\">\n                {listOfNames()}\n              </div>\n            </div>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleOpenForm}>Submit</Button>\n          </>\n        ) : null}\n\n      </div>\n\n      {flag ? (\n        <>\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <div>\n                <div>\n                  <h4>Transactions</h4>\n                  <div style={{ textAlign: \"left\" }}>\n                    <p>Enter transactions in the table below :-</p>\n                    <ol>\n                      <li>Enter the names of the Payer in first column</li>\n                      <li>Enter the names of the Payee in second column</li>\n                      <li>Enter the amount paid in the third column</li>\n                      <li>Click on Build Graph to build a graph from the given transactions</li>\n                      <li>Click on Simplify payments button when you are done with entering the payments.</li>\n                    </ol>\n                  </div>\n                </div>\n              </div>\n              <div className=\"form\">\n                {flag && myForm()}\n              </div>\n\n              {items && items.length ? (\n                <div className=\"form-names\">\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleTransactionDataSubmit}>Build Graph</Button>\n                  <Button variant=\"contained\" color=\"secondary\" onClick={splitwiseTransactions}>Simplify Settlements</Button>\n                </div>\n              ) : null}\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n              {Object.keys(inputGraphData).length && Object.keys(inputGraphConfig).length ? (\n                <>\n                  <h5>Generated graph from the transactions entered</h5>\n                  <Graph\n                    id=\"graph-id\" // id is mandatory\n                    data={inputGraphData}\n                    config={inputGraphConfig}\n                  />\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              {\n                outputList && outputList.length ? (\n                  <>\n                    <h3> Simplified Settlement</h3>\n                    <TableContainer component={Paper} className=\"table\">\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell align=\"center\">Payer</TableCell>\n                            <TableCell align=\"center\">Payee</TableCell>\n                            <TableCell align=\"center\">Amount</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {outputList.length && outputList.map((row) => (\n                            <TableRow key={row.name}>\n                              <TableCell component=\"th\" align=\"center\" scope=\"row\">\n                                {row.person1}\n                              </TableCell>\n                              <TableCell align=\"center\">{row.person2}</TableCell>\n                              <TableCell align=\"center\">{row.amount}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </>\n                ) : null\n              }\n            </Grid>\n            <Grid item xs={12} md={6}>\n              {\n                Object.keys(outputGraphData).length && Object.keys(inputGraphConfig).length ? (\n                  <>\n                    <h5>Graph generated from the solution of algorithm</h5>\n                    <Graph\n                      id=\"graph-id-output\" // id is mandatory\n                      data={outputGraphData}\n                      config={inputGraphConfig}\n                    />\n                  </>\n                ) : null\n              }\n            </Grid>\n          </Grid>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}