{"ast":null,"code":"import Expense from \"../classes/expense\";\n\nfunction upheapify(heap, idx) {\n  // heap = [{first: net_value, second: person}]\n  if (idx == 0) return;\n  var pi = Math.floor((idx - 1) / 2);\n\n  if (heap[pi].first < heap[idx].first) {\n    var temp = heap[pi];\n    heap[pi] = heap[idx];\n    heap[idx] = temp;\n    upheapify(heap, pi);\n  } else {\n    return;\n  }\n}\n\nfunction downheapify(heap, idx) {\n  var lc = 2 * idx + 1;\n  var rc = 2 * idx + 2;\n  if (lc >= heap.length && rc >= heap.length) return;\n  var largest = idx;\n\n  if (lc < heap.length && heap[lc].first > heap[largest].first) {\n    largest = lc;\n  }\n\n  if (rc < heap.length && heap[rc].first > heap[largest].first) {\n    largest = rc;\n  }\n\n  if (largest == idx) return;\n  var temp = heap[largest];\n  heap[largest] = heap[idx];\n  heap[idx] = temp;\n  downheapify(heap, largest);\n}\n\nfunction push_heap(heap, key, val) {\n  var ob = {\n    \"first\": key,\n    \"second\": val\n  };\n  heap.push(ob);\n  upheapify(heap, heap.length - 1);\n}\n\nfunction pop_heap(heap) {\n  if (heap.length == 0) return 0;\n  var i = heap.length - 1;\n  var temp = heap[0];\n  heap[0] = heap[i];\n  heap[i] = temp;\n  heap.pop();\n  downheapify(heap, 0);\n}\n\nfunction heap_top(heap) {\n  if (heap.length == 0) {\n    return;\n  }\n\n  return heap[0];\n} // transactions = [{person1: 'pulkit', person2: 'deepak', amount: 100}]\n\n\nexport function splitwise(transactions) {\n  // transactions array will store an object of expense class\n  var net_balance = {}; // hashmap or also called as object in js\n\n  for (var i = 0; i < transactions.length; i++) {\n    var e = transactions[i]; // e is an object of expense class\n    // person1 is the payer so under a credit\n    // person2 is the payee so under a debit\n\n    if (e.person1 in net_balance) {\n      // checks whther e.person1 is present in hashmap or not\n      net_balance[e.person1] += e.amount;\n    } else {\n      net_balance[e.person1] = e.amount;\n    }\n\n    if (e.person2 in net_balance) {\n      net_balance[e.person2] -= e.amount;\n    } else {\n      net_balance[e.person2] = -e.amount;\n    }\n  }\n\n  var positive = []; // heap of credit holders\n\n  var negative = []; // heap of debit holders\n\n  for (const p in net_balance) {\n    if (net_balance[p] > 0) {\n      push_heap(positive, net_balance[p], p);\n    } else {\n      push_heap(negative, -1 * net_balance[p], p);\n    }\n  }\n\n  var result = []; // array of expense objects\n\n  while (positive.length > 0) {\n    var p1 = heap_top(positive);\n    var p2 = heap_top(negative);\n    pop_heap(positive);\n    pop_heap(negative);\n    let exp = new Expense(p2.second, p1.second, Math.min(p1.first, p2.first));\n    result.push(exp);\n\n    if (p1.first > p2.first) {\n      push_heap(positive, p1.first - p2.first, p1.second);\n    } else if (p1.first < p2.first) {\n      push_heap(negative, p2.first - p1.first, p2.second);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/anica/splitwise/src/utils/splitwise.js"],"names":["Expense","upheapify","heap","idx","pi","Math","floor","first","temp","downheapify","lc","rc","length","largest","push_heap","key","val","ob","push","pop_heap","i","pop","heap_top","splitwise","transactions","net_balance","e","person1","amount","person2","positive","negative","p","result","p1","p2","exp","second","min"],"mappings":"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","sourcesContent":["import Expense from \"../classes/expense\";\nfunction upheapify(heap, idx) {\n\t// heap = [{first: net_value, second: person}]\n\tif(idx == 0) return;\n\tvar pi = Math.floor((idx-1)/2);\n\tif(heap[pi].first < heap[idx].first) {\n\t\tvar temp = heap[pi];\n\t\theap[pi] = heap[idx];\n\t\theap[idx] = temp;\n\t\tupheapify(heap, pi);\n\t} else {\n\t\treturn;\n\t}\n}\n\nfunction downheapify(heap, idx) {\n\tvar lc = 2*idx+1;\n\tvar rc = 2*idx+2;\n\tif(lc >= heap.length && rc >= heap.length) return;\n\tvar largest = idx;\n\tif(lc < heap.length && heap[lc].first > heap[largest].first) {\n\t\tlargest = lc;\n\t}\n\tif(rc < heap.length && heap[rc].first > heap[largest].first) {\n\t\tlargest = rc;\n\t}\n\tif(largest == idx) return;\n\tvar temp = heap[largest];\n\theap[largest] = heap[idx];\n\theap[idx] = temp;\n\tdownheapify(heap, largest);\n}\n\nfunction push_heap(heap, key, val) {\n\tvar ob = {\"first\": key, \"second\": val}\n\theap.push(ob);\n\tupheapify(heap, heap.length-1);\n}\n\nfunction pop_heap(heap) {\n\tif(heap.length == 0) return 0;\n\tvar i = heap.length - 1;\n\tvar temp = heap[0];\n\theap[0] = heap[i];\n\theap[i] = temp;\n\theap.pop();\n\tdownheapify(heap, 0);\n}\n\nfunction heap_top(heap) {\n\tif(heap.length == 0) {\n\t\treturn;\n\t}\n\treturn heap[0];\n}\n\n\n\n// transactions = [{person1: 'pulkit', person2: 'deepak', amount: 100}]\nexport function splitwise(transactions) {\n\t// transactions array will store an object of expense class\n\tvar net_balance = {}; // hashmap or also called as object in js\n\tfor(var i = 0; i < transactions.length; i++) {\n\t\tvar e = transactions[i]; // e is an object of expense class\n\n\t\t// person1 is the payer so under a credit\n\t\t// person2 is the payee so under a debit\n\t\tif(e.person1 in net_balance) {\n\t\t\t// checks whther e.person1 is present in hashmap or not\n\t\t\tnet_balance[e.person1] += e.amount;\n\t\t} else {\n\t\t\tnet_balance[e.person1] = e.amount;\n\t\t}\n\n\t\tif(e.person2 in net_balance) {\n\t\t\tnet_balance[e.person2] -= e.amount;\n\t\t} else {\n\t\t\tnet_balance[e.person2] = -e.amount;\n\t\t}\n\t}\n\n\n\tvar positive = []; // heap of credit holders\n\tvar negative = []; // heap of debit holders\n\n\tfor(const p in net_balance) {\n\t\tif(net_balance[p] > 0) {\n\t\t\tpush_heap(positive, net_balance[p], p);\n\t\t} else {\n\t\t\tpush_heap(negative, -1*net_balance[p], p);\n\t\t}\n\t}\n\n\tvar result = []; // array of expense objects\n\n\twhile(positive.length > 0) {\n\t\tvar p1 = heap_top(positive);\n\t\tvar p2 = heap_top(negative);\n\t\tpop_heap(positive);\n\t\tpop_heap(negative);\n\t\tlet exp = new Expense(p2.second, p1.second, Math.min(p1.first, p2.first));\n\t\tresult.push(exp);\n\t\tif(p1.first > p2.first) {\n\t\t\tpush_heap(positive, p1.first - p2.first, p1.second);\n\t\t} else if(p1.first < p2.first) {\n\t\t\tpush_heap(negative, p2.first - p1.first, p2.second);\n\t\t}\n\t}\n\n\treturn result;\n}"]},"metadata":{},"sourceType":"module"}